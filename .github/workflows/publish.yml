name: Publish Docker
on:
  push:
    branches: ['release']
env:
  AWS_REGION: ap-southeast-2
  ECS_SERVICE: uat-documenso-service
  ECS_CLUSTER: documenso-standalone
  ECS_TASK_DEFINITION: .aws/uat-task-definition.json
  CONTAINER_NAME: uat-documenso
jobs:
  build_and_publish_platform_containers:
    name: Build and publish platform containers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be # v1.5.3
      - name: Build and tag image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: tf-uat-documenso
        run: |
          APP_VERSION="$(git name-rev --tags --name-only $(git rev-parse HEAD) | head -n 1 | sed 's/\^0//')"
          GIT_SHA="$(git rev-parse HEAD)"
          docker build -f ./docker/Dockerfile --progress=plain --tag $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF:11}-${GITHUB_SHA::8} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF:11}-${GITHUB_SHA::8}
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF:11}-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc

        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
